package com.cj.chapt6;

public class EnumClass {
    /**
     * 1. 直接使用简单的静态常量来表示枚举
     * 2. 通过定义类的方式来实现枚举
     * 3. 通过定义枚举类来实现枚举
     *
     * 枚举类可以实现一个或多个接口，使用enum定义的枚举类默认继承了java.lang.Enum类，而不是默认继承Object类，因此枚举类不能显示继承其他父类。
     * java.lang.Enum类实现了java.lang.Serializable和java.lang.Comparable两个接口。
     * 使用enum定义、非抽象的枚举类默认会使用final修饰，因此枚举类不能派生子类。枚举类中可以定义抽象方法，并由匿名内部类实现，但是不能用abstract修饰，系统自动会为它添加abstract关键字
     * 并不是所有的枚举类都使用了final修饰！非抽象的枚举类才默认使用final修饰。对于一个抽象的枚举类（只要它包含了抽象方法，它就是抽象枚举类），系统会默认使用abstract修饰，而不是使用final修饰
     *
     * 枚举类的构造器只能使用private访问控制符。
     * 枚举类的所有实例必须在枚举类的第一行显示列出，否则这个枚举类永远都不能产生实例。列出的实例，系统会自动添加public static final修饰，无须程序员显示添加。
     *
     * 枚举类默认提供了一个values()方法，可以遍历所有的枚举值。
     * 枚举实例的使用: EnumClass.variable
     *
     * switch控制表达式使用枚举类型时，case表达式中的值直接使用枚举值的名字，无需添加枚举类作为限定
     *
     * 枚举类通常应该设计成不可变类，它的成员变量值不应该允许改变。建议将枚举类的成员变量都使用private final修饰
     * 如果将所有成员变量都使用了final修饰符来修饰，必须在构造器里为这些成员变量指定初始值（或在定义成员变量时指定默认值，或者在初始化块中指定初始值，但这两种情况并不常见）
     *
     */
}
